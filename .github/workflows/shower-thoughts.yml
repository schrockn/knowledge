name: Process Shower Thoughts

on:
  issues:
    types: [opened]

jobs:
  process-shower-thought:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create shower thought file
      run: |
        # Extract the issue body and clean it up
        THOUGHT_BODY=$(echo '${{ github.event.issue.body }}' | sed 's/^[[:space:]]*-[[:space:]]*//' | sed 's/^[[:space:]]*//')
        
        # Get current date for filename suffix
        DATE_SUFFIX=$(date '+%Y-%m-%d')
        
        # Create a filename-friendly version of the thought (first 50 chars, kebab-case)
        FILENAME_BASE=$(echo "$THOUGHT_BODY" | head -c 50 | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | sed 's/-\+/-/g' | sed 's/^-\|-$//g')
        
        # Create the full filename
        FILENAME="projects/ai_software_engineering_blog/shower-thoughts/${FILENAME_BASE}-${DATE_SUFFIX}.md"
        
        # Create the file with the thought content
        echo "$THOUGHT_BODY" > "$FILENAME"
        
        # Commit the change
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add "$FILENAME"
        git commit -m "Add shower thought from issue #${{ github.event.issue.number }}: ${FILENAME_BASE}"
        git push
        
        # Store filename for the comment step
        echo "CREATED_FILE=$FILENAME" >> $GITHUB_ENV
    
    - name: Close issue and add comment
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: `âœ… Shower thought has been saved to \`${process.env.CREATED_FILE}\``
          });
          
          await github.rest.issues.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            state: 'closed'
          });